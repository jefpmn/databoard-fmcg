// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "klikdaily-databoard/models"

	mock "github.com/stretchr/testify/mock"

	repositories "klikdaily-databoard/repositories"
)

// AdminRepositoryInterface is an autogenerated mock type for the AdminRepositoryInterface type
type AdminRepositoryInterface struct {
	mock.Mock
}

// CreateAdmin provides a mock function with given fields: admin
func (_m *AdminRepositoryInterface) CreateAdmin(admin models.AdminRequest) chan repositories.RepositoryResult[models.Admin] {
	ret := _m.Called(admin)

	var r0 chan repositories.RepositoryResult[models.Admin]
	if rf, ok := ret.Get(0).(func(models.AdminRequest) chan repositories.RepositoryResult[models.Admin]); ok {
		r0 = rf(admin)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan repositories.RepositoryResult[models.Admin])
		}
	}

	return r0
}

type mockConstructorTestingTNewAdminRepositoryInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewAdminRepositoryInterface creates a new instance of AdminRepositoryInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAdminRepositoryInterface(t mockConstructorTestingTNewAdminRepositoryInterface) *AdminRepositoryInterface {
	mock := &AdminRepositoryInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
